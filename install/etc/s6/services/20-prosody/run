#!/usr/bin/with-contenv bash

while [ ! -f /tmp/state/10-* ]
do
  sleep 1
done

if [ ! -f /tmp/state/20-prosody ]; then
    sed -i -e "s/daemonize = true/daemonize = false/g" /etc/prosody/prosody.cfg.lua
    sed -i -e "s/\/var\/log\/prosody\//\/www\/logs\/prosody\//g" /etc/prosody/prosody.cfg.lua

    chown -R prosody /var/lib/prosody

	mkdir -p /etc/prosody/conf.d/
	cat  > /etc/prosody/conf.d/$VIRTUAL_HOST.cfg.lua <<EOF;
VirtualHost "$VIRTUAL_HOST"
        authentication = "anonymous"
        ssl = {
                key = "/etc/prosody/certs/$VIRTUAL_HOST.key";
                certificate = "/etc/prosody/certs/$VIRTUAL_HOST.crt";
        }

        modules_enabled = {
            "bosh";
            "pubsub";
            "ping"; 
        }

        c2s_require_encryption = false

Component "conference.$VIRTUAL_HOST" "muc"
    storage = "null"
admins = { "focus@auth.$VIRTUAL_HOST" }

Component "jitsi-videobridge.$VIRTUAL_HOST"
    component_secret = "$JITSI_VIDEO_PASS"

VirtualHost "auth.$VIRTUAL_HOST"
    authentication = "internal_plain"

Component "focus.$VIRTUAL_HOST"
    component_secret = "$JICOFO_PASS"

EOF

    
	if [ -f /var/lib/prosody/$VIRTUAL_HOST.key ] ; then
		echo 'Certificates already exist, skipping..'
	else
		echo 'Generating Certificates'
		cat  > /tmp/generate-cert.sh <<EOF;
#!/usr/bin/expect
spawn prosodyctl cert generate $VIRTUAL_HOST
expect "Choose key size"
send -- "2048\n"
expect "countryName"
send -- "CA\n"
expect "localityName"
send -- "\n"
expect "organizationName"
send -- "\n"
expect "organizationalUnitName"
send -- "\n"
expect "commonName"
send -- "\n"
expect "emailAddress"
send -- "\n"
expect ".crt"
send -- "\n"
exit 0
EOF
		chmod +x /tmp/generate-cert.sh
		sudo -u prosody /usr/bin/with-contenv /tmp/generate-cert.sh >/dev/null
                ln -s /etc/ssl/certs/ssl-cert-snakeoil.pem /etc/prosody/certs/$VIRTUAL_HOST.cert
                ln -s /var/lib/prosody/$VIRTUAL_HOST.crt /etc/prosody/certs/
                ln -s /var/lib/prosody/$VIRTUAL_HOST.key /etc/prosody/certs/
	fi

        echo 'Registering Focus User..'
	sudo -u prosody prosodyctl register focus auth.$VIRTUAL_HOST $JICOFO_USER_PASS
    
	mkdir -p /www/logs/prosody
        chown -R prosody /www/logs/prosody
        mkdir -p /tmp/state
	echo 'Initialization Complete' >/tmp/state/20-prosody
fi

echo ''
echo '** Starting prosody..'
exec s6-setuidgid prosody prosodyctl start
